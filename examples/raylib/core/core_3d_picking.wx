#rem
/*******************************************************************************************
*
*   raylib [core] example - Picking in 3d mode
*
*   This example has been created using raylib 1.3 (www.raylib.com)
*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details)
*
*   Copyright (c) 2015 Ramon Santamaria (@raysan5)
*
*   Translated to Wonkey by Danilo Krahn, May 2021
*
********************************************************************************************/
#end

#Import "<raylib>"

Using raylib..

Function Main()

    ' Initialization
    '--------------------------------------------------------------------------------------
    Const screenWidth:Int  = 800
    Const screenHeight:Int = 450

    InitWindow(screenWidth, screenHeight, "raylib [core] example - 3d picking")

    ' Define the camera to look into our 3d world
    Local camera:Camera
    camera.position   = New Vector3( 10.0, 10.0, 10.0 ) ' Camera position
    camera.target     = New Vector3(  0.0,  0.0,  0.0 ) ' Camera looking at point
    camera.up         = New Vector3(  0.0,  1.0,  0.0 ) ' Camera up vector (rotation towards target)
    camera.fovy       = 45.0                            ' Camera field-of-view Y
    camera.projection = CAMERA_PERSPECTIVE              ' Camera mode type

    Local cubePosition := New Vector3( 0.0, 1.0, 0.0 )
    Local cubeSize     := New Vector3( 2.0, 2.0, 2.0 )

    Local ray:Ray                                       ' Picking line ray

    Local collision:Bool = False

    SetCameraMode(camera, CAMERA_FREE)                  ' Set a free camera mode

    SetTargetFPS(60)                                    ' Set our game to run at 60 frames-per-second
    '--------------------------------------------------------------------------------------

    ' Main game loop
    While Not WindowShouldClose()                       ' Detect window close button or ESC key

        ' Update
        '----------------------------------------------------------------------------------
        UpdateCamera(Varptr camera)                     ' Update camera

        If IsMouseButtonPressed(MOUSE_LEFT_BUTTON)
            If Not collision
                ray = GetMouseRay(GetMousePosition(), camera)

                ' Check collision between ray and box
                collision = CheckCollisionRayBox(ray,
                            New BoundingBox( New Vector3( cubePosition.x - cubeSize.x/2,
                                                          cubePosition.y - cubeSize.y/2,
                                                          cubePosition.z - cubeSize.z/2 ),
                                             New Vector3( cubePosition.x + cubeSize.x/2,
                                                          cubePosition.y + cubeSize.y/2,
                                                          cubePosition.z + cubeSize.z/2 ) ) )
            Else
	            collision = False
	        Endif
        Endif
        '----------------------------------------------------------------------------------

        ' Draw
        '----------------------------------------------------------------------------------
        BeginDrawing()

            ClearBackground(RAYWHITE)

            BeginMode3D(camera)

                If collision
                    DrawCube(cubePosition, cubeSize.x, cubeSize.y, cubeSize.z, RED)
                    DrawCubeWires(cubePosition, cubeSize.x, cubeSize.y, cubeSize.z, MAROON)

                    DrawCubeWires(cubePosition, cubeSize.x + 0.2, cubeSize.y + 0.2, cubeSize.z + 0.2, GREEN)
                Else
                    DrawCube(cubePosition, cubeSize.x, cubeSize.y, cubeSize.z, GRAY)
                    DrawCubeWires(cubePosition, cubeSize.x, cubeSize.y, cubeSize.z, DARKGRAY)
                Endif

                DrawRay(ray, MAROON)
                DrawGrid(10, 1.0)

            EndMode3D()

            DrawText("Try selecting the box with mouse!", 240, 10, 20, DARKGRAY)

            If collision
	            DrawText("BOX SELECTED", (screenWidth - MeasureText("BOX SELECTED", 30)) / 2, Int(screenHeight * 0.1), 30, GREEN)
	        Endif

            DrawFPS(10, 10)

        EndDrawing()
        '----------------------------------------------------------------------------------
    Wend

    ' De-Initialization
    '--------------------------------------------------------------------------------------
    CloseWindow()        ' Close window and OpenGL context
    '--------------------------------------------------------------------------------------

End
