#rem
/*******************************************************************************************
*
*   raylib [core] example - Gamepad input
*
*   NOTE: This example requires a Gamepad connected to the system
*         raylib is configured to work with the following gamepads:
*                - Xbox 360 Controller (Xbox 360, Xbox One)
*                - PLAYSTATION(R)3 Controller
*         Check raylib.h for buttons configuration
*
*   This example has been created using raylib 2.5 (www.raylib.com)
*   raylib is licensed under an unmodIfied zlib/libpng license (View raylib.h for details)
*
*   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)
*
*   Translated to Wonkey by Danilo Krahn, May 2021
*
********************************************************************************************/
#end

#Import "<raylib>"
#Import "<std>"

Using raylib..
Using std.filesystem

#Import "resources/ps3.png"
#Import "resources/xbox.png"

' NOTE: Gamepad name ID depends on drivers and OS
Const XBOX360_LEGACY_NAME_ID:String = "Xbox Controller"
#If __TARGET__ = "raspberry"
    Const XBOX360_NAME_ID:String = "Microsoft X-Box 360 pad"
    Const PS3_NAME_ID:String     = "PLAYSTATION(R)3 Controller"
#Else
    Const XBOX360_NAME_ID:String = "Xbox 360 Controller"
    Const PS3_NAME_ID:String     = "PLAYSTATION(R)3 Controller"
#EndIf

Function Main()

    ' Initialization
    '--------------------------------------------------------------------------------------
    Const screenWidth:Int  = 800
    Const screenHeight:Int = 450

    SetConfigFlags(FLAG_MSAA_4X_HINT)  ' Set MSAA 4X hint before windows creation

    InitWindow(screenWidth, screenHeight, "raylib [core] example - gamepad input")
    Local texPs3Pad:Texture2D  = LoadTexture(AssetsDir()+"ps3.png")
    Local texXboxPad:Texture2D = LoadTexture(AssetsDir()+"xbox.png")

    SetTargetFPS(60)                ' Set our game to run at 60 frames-per-second
    '--------------------------------------------------------------------------------------

    ' Main game loop
    While Not WindowShouldClose()   ' Detect window close button or ESC key

        ' Update
        '----------------------------------------------------------------------------------
        ' ...
        '----------------------------------------------------------------------------------

        ' Draw
        '----------------------------------------------------------------------------------
        BeginDrawing()

            ClearBackground(RAYWHITE)

            If IsGamepadAvailable(0)

                DrawText("GP1: " + GetGamepadName(0), 10, 10, 10, BLACK)

                If IsGamepadName(0, XBOX360_NAME_ID) Or IsGamepadName(0, XBOX360_LEGACY_NAME_ID)

                    DrawTexture(texXboxPad, 0, 0, DARKGRAY)

                    ' Draw buttons: xbox home
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_MIDDLE) Then DrawCircle(394, 89, 19, RED)

                    ' Draw buttons: basic
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_MIDDLE_RIGHT)     Then DrawCircle(436, 150, 9, RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_MIDDLE_LEFT)      Then DrawCircle(352, 150, 9, RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_RIGHT_FACE_LEFT)  Then DrawCircle(501, 151, 15, BLUE)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_RIGHT_FACE_DOWN)  Then DrawCircle(536, 187, 15, LIME)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_RIGHT_FACE_RIGHT) Then DrawCircle(572, 151, 15, MAROON)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_RIGHT_FACE_UP)    Then DrawCircle(536, 115, 15, GOLD)

                    ' Draw buttons: d-pad
                    DrawRectangle(317, 202, 19, 71, BLACK)
                    DrawRectangle(293, 228, 69, 19, BLACK)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_LEFT_FACE_UP)    Then DrawRectangle(317, 202, 19, 26, RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_LEFT_FACE_DOWN)  Then DrawRectangle(317, 202 + 45, 19, 26, RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_LEFT_FACE_LEFT)  Then DrawRectangle(292, 228, 25, 19, RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_LEFT_FACE_RIGHT) Then DrawRectangle(292 + 44, 228, 26, 19, RED)

                    ' Draw buttons: left-right back
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_LEFT_TRIGGER_1)  Then DrawCircle(259, 61, 20, RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_RIGHT_TRIGGER_1) Then DrawCircle(536, 61, 20, RED)

                    ' Draw axis: left joystick
                    DrawCircle(259, 152, 39, BLACK)
                    DrawCircle(259, 152, 34, LIGHTGRAY)
                    DrawCircle(259 + Int(GetGamepadAxisMovement(0, GAMEPAD_AXIS_LEFT_X)*20),
                               152 + Int(GetGamepadAxisMovement(0, GAMEPAD_AXIS_LEFT_Y)*20), 25, BLACK)

                    ' Draw axis: right joystick
                    DrawCircle(461, 237, 38, BLACK)
                    DrawCircle(461, 237, 33, LIGHTGRAY)
                    DrawCircle(461 + Int(GetGamepadAxisMovement(0, GAMEPAD_AXIS_RIGHT_X)*20),
                               237 + Int(GetGamepadAxisMovement(0, GAMEPAD_AXIS_RIGHT_Y)*20), 25, BLACK)

                    ' Draw axis: left-right triggers
                    DrawRectangle(170, 30, 15, 70, GRAY)
                    DrawRectangle(604, 30, 15, 70, GRAY)
                    DrawRectangle(170, 30, 15, 1 + Int(GetGamepadAxisMovement(0, GAMEPAD_AXIS_LEFT_TRIGGER )/2)*70, RED)
                    DrawRectangle(604, 30, 15, 1 + Int(GetGamepadAxisMovement(0, GAMEPAD_AXIS_RIGHT_TRIGGER)/2)*70, RED)

                ElseIf IsGamepadName(0, PS3_NAME_ID)

                    DrawTexture(texPs3Pad, 0, 0, DARKGRAY)

                    ' Draw buttons: ps
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_MIDDLE) Then DrawCircle(396, 222, 13, RED)

                    ' Draw buttons: basic
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_MIDDLE_LEFT)      Then DrawRectangle(328, 170, 32, 13, RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_MIDDLE_RIGHT)     Then DrawTriangle(New Vector2(436, 168), New Vector2(436, 185), New Vector2(464, 177), RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_RIGHT_FACE_UP)    Then DrawCircle(557, 144, 13, LIME)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_RIGHT_FACE_RIGHT) Then DrawCircle(586, 173, 13, RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_RIGHT_FACE_DOWN)  Then DrawCircle(557, 203, 13, VIOLET)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_RIGHT_FACE_LEFT)  Then DrawCircle(527, 173, 13, PINK)

                    ' Draw buttons: d-pad
                    DrawRectangle(225, 132, 24, 84, BLACK)
                    DrawRectangle(195, 161, 84, 25, BLACK)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_LEFT_FACE_UP)    Then DrawRectangle(225, 132, 24, 29, RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_LEFT_FACE_DOWN)  Then DrawRectangle(225, 132 + 54, 24, 30, RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_LEFT_FACE_LEFT)  Then DrawRectangle(195, 161, 30, 25, RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_LEFT_FACE_RIGHT) Then DrawRectangle(195 + 54, 161, 30, 25, RED)

                    ' Draw buttons: left-right back buttons
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_LEFT_TRIGGER_1)  Then DrawCircle(239, 82, 20, RED)
                    If IsGamepadButtonDown(0, GAMEPAD_BUTTON_RIGHT_TRIGGER_1) Then DrawCircle(557, 82, 20, RED)

                    ' Draw axis: left joystick
                    DrawCircle(319, 255, 35, BLACK)
                    DrawCircle(319, 255, 31, LIGHTGRAY)
                    DrawCircle(319 + Int(GetGamepadAxisMovement(0, GAMEPAD_AXIS_LEFT_X) * 20),
                               255 + Int(GetGamepadAxisMovement(0, GAMEPAD_AXIS_LEFT_Y) * 20), 25, BLACK)

                    ' Draw axis: right joystick
                    DrawCircle(475, 255, 35, BLACK)
                    DrawCircle(475, 255, 31, LIGHTGRAY)
                    DrawCircle(475 + Int(GetGamepadAxisMovement(0, GAMEPAD_AXIS_RIGHT_X)*20),
                               255 + Int(GetGamepadAxisMovement(0, GAMEPAD_AXIS_RIGHT_Y)*20), 25, BLACK)

                    ' Draw axis: left-right triggers
                    DrawRectangle(169, 48, 15, 70, GRAY)
                    DrawRectangle(611, 48, 15, 70, GRAY)
                    DrawRectangle(169, 48, 15, 1 - Int(GetGamepadAxisMovement(0, GAMEPAD_AXIS_LEFT_TRIGGER ) / 2) * 70, RED)
                    DrawRectangle(611, 48, 15, 1 - Int(GetGamepadAxisMovement(0, GAMEPAD_AXIS_RIGHT_TRIGGER) / 2) * 70, RED)

                Else
                    DrawText("- GENERIC GAMEPAD -", 280, 180, 20, GRAY)

                    ' TODO: Draw generic gamepad
                Endif

                DrawText("DETECTED AXIS: " + GetGamepadAxisCount(0), 10, 50, 10, MAROON)


                Local i:Int = 0
                While i < GetGamepadAxisCount(0)
                    DrawText("AXIS " + i + ": " + GetGamepadAxisMovement(0, i), 20, 70 + 20*i, 10, DARKGRAY)
                    i += 1
                Wend

                If GetGamepadButtonPressed() <> -1
	                DrawText("DETECTED BUTTON: " + GetGamepadButtonPressed(), 10, 430, 10, RED)
                Else
	                DrawText("DETECTED BUTTON: NONE", 10, 430, 10, GRAY)
	            Endif
            Else
                DrawText("GP1: NOT DETECTED", 10, 10, 10, GRAY)

                DrawTexture(texXboxPad, 0, 0, LIGHTGRAY)
            Endif

        EndDrawing()
        '----------------------------------------------------------------------------------
    Wend

    ' De-Initialization
    '--------------------------------------------------------------------------------------
    UnloadTexture(texPs3Pad)
    UnloadTexture(texXboxPad)

    CloseWindow()                   ' Close window and OpenGL context
    '--------------------------------------------------------------------------------------

End
